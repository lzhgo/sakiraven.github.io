{"pages":[{"title":"留言","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"友链","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://cdn.jsdelivr.net/gh/sakiraven/imgs/blog/51615538.jpeg 网站名称：声控周不鸽 网站地址：life.sakikun.com 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"相册","text":"猫 董烨 动物 街景 人文 标志 图片版权属于声控周不鸽","link":"/album/index.html"},{"title":"自说自话","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: 'c98812d0bb3bbe80e27d', clientSecret: '18dd21afa9cbf7a9790197ae6a90c8d83bb72f41', id: '自说自话', repo: 'blog-comment', owner: 'sakiraven', admin: \"sakiraven\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"},{"title":"自述","text":"最初搭建博客目的 灵感来源 最初是自第二份工作后4个月开始，从项目经理身上学到的工作日志记录习惯（后续还有一个日常日志app的想法）期间虽然记录的很简单，有得一笔带过，有的记录可能细节丢失，回过头来看看还挺享受的这个过程的； 便于管理 上述过程中分化成三部分笔记，工作日志（记录每天工作内容）个人项目开发日志（对于个人项目学习过程）辞职后的生活日志（相对综合什么都有写）承载平台为有道云笔记，整体相对比较杂乱，不方便管理。个性化的博客主题模板，分类、归档、标签，这些功能正好切中要害，满足自身需求； 监督作用 作为个人开发者工作与学习需要极强的意志力，我认为自己只存在一定的自控力。将生活发布于互联网，会有种督促自身的感觉。相当于每天都在立flag，如果实现不了可太丢人了； 作为简历 因为暂时不工作，为了证明自己还处于码圈，并且持续在以个人开发者身份工作； 为什么放弃工作 趁着年轻，追逐下梦想，有一个搭建核心向社区的idea； 职业规划有三个阶段，第1年能力达到组长能力，2-4年达到项目经理级别，4-???年要摸到更高的层次，但还没具体想到。也是想开始尝试下第二阶段； 学习计划，过去两年的学习方式是扩大广度，各方面的技术点都有接触使用，现在依旧在拓宽接触范围比如移动原生开发，同时想挖掘下server端的深度； 想尝试一下面对网络用户的移动平台，站在产品角度思考功能，作为项目经理来规划业务，挑战架构师的工作设计符合业务与局限性能下的技术选型； 计划做数款ios平台app来提高产品能力； &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因为《中专学历》，面试通知率极低，因为《年纪小，但成熟》《价格便宜，但能力还算不错》两项主要优势入职通过率极高。但随着时间的推移，等我到24岁时同龄本科生可能已经工作一两年，又或者研究生快毕业，再与他们竞争将毫无优势可言。所以我想通过被迫”独自”的形式维护一个”用户级”的社区平台来提高自身的各项能力。再与他人竞争时，别人可能在讨论代码技术点，而我想在产品、技术选型、业务、运维等角度与面试官讨论； 个人简介 技能 java 主要用于编写server端，接触契机是上中专时一个很厉害的同学带我入门的。当时喜欢玩一些独立游戏，没有专用服务器，只能自己搭建。最初从静态网页开始，到个人网站，再到靠java吃饭； python 工作后一个同事带我入坑的，从这以后认识到只会一门语言远远不够，python还有更多的功能，但自己能力有限（api战士），使用范围仅限于脚本了； javascript 主要用于web前端的逻辑，用过的框架只有jquery和vue。老实说在接触MVVM之前很讨厌写web前端代码，有大量的填充节点代码，拼接起来很痛苦; swift 我是苹果老脑残粉了，可能是因为信仰加持，配合swiftUI感觉代码写起来的感觉很舒适…就很玄学，现在社区2.0.1的原型是现在苹果端编写的； dart 还有没开始使用，当初决定踏足移动端时看向android与ios，比较之下选择了更陌生的ios先入坑，如果ios都不无法拿下那就不打算浪费时间了，使用dart主要是为了flutterUI； 爱好 钓鱼 这种快乐可能类似于钓鱼执法吧，🐟上钩那一刻特别兴奋，很享受这个过程与结果； 摄影 喜欢拍摄动植物、人像，相对于万年不变的绿水青山，更喜欢记录转瞬即逝的画面； 电影 偏向于历史、纪录片、演技派、内涵向、纯喜剧 例如切尔诺贝利、姜文系列、周星驰系列、辛德勒的名单、绿皮书、了不起的盖茨比； 音乐 华语独爱周杰伦，小学时听刘德华、港台、欧美网络热曲比较多。初中开始深度接触周杰伦才认识到什么是无敌。即使放在21年，依旧霸榜华语乐坛； 动画 追番观看200+ 喜欢有充实内容或画面表现力有独特理解的 例如：物语系列、来自新世界、进击的巨人、怪化猫、动物狂想曲、昨日之歌、eva、天气之子、夏目友人帐等； 骑行 机械式的传动结构令我满足，还比较喜欢摩托车，但是不会…曾经陪朋友出去放松，决定从哈尔滨开始长白山为目的地，结果到吉林的时候遇到了50年不遇的暴风雨走到舒兰便打道回府了，完成度1/3。后来还有一次从北京带猫回家，单日行程170km； 优势 学习方面 三人行必有我师，我会分析他人优点，将一点我所欠缺的素养，加以特色化适应学习，这么多年来我非常感谢身边的每个朋友，我认为你们是我最好的老师。还算有悟性，当受人点拨时，可以相对较快的领悟，同时有一定的举一反三能力。除此之外学习知识大多来源于互联网，有较强的辨识能力； 为人方面 和善，任何时候都不会主动交恶。坦诚，我以双赢为目的。直爽，当有人询问我意见或者问答时，有什么说什么，不会拖泥带水。体贴，公开场合我非常注意不让他人受到冷落或者处于尴尬境地，如果要尴尬我希望那个人是说。不好意思我就是那超越99%的完美人（工具人），我的朋友（用过我的人）没有不说好； 劣势 学习方面 很怠惰，没办法向那些热爱学习的人一样，以学代休，下班时我想的还是娱乐至上； 为人方面 非常慢热，会给那些不熟悉我的人一种阴冷的感觉，不是那么近人，主要原因是从前是个社恐。再有就是和没有共同话题的人，非工作原因几乎无法聊起来，不是我不愿意和这些人接触，而是我不知道切入点； 年度短期计划 2021-UNCOMPLETED 8月份开始尝试健身； 尽可能减少非开发屏幕使用占比； 开发社区2.0.1以ios作为原型端； 整理搭建桌面，让开发环境尽可能舒适一些； 生活健康一些，戒可乐，作息要尽可能有规律10点30后必须熄灯上床睡觉； 2022-UNCOMPLETED 将健身养成习惯； 尽可能参与社交活动，不能宅起来，比如找一下类似于服务生的兼职； 开发ios、android、win、web任意平台10款app； 开发社区2.1.1（andriod，iso，web，server）6月份之前完成决定发行版，并在年底累计万名用户注册； 心路历程转折点","link":"/about/index.html"},{"title":"","text":"计划这些年来的学习对象与帮助过我的人回忆一下 未完待续…","link":"/thanks/index.html"}],"posts":[{"title":"项目规划生命之旅其一","text":"摘要ios第一个开发企划，目标是记录一天的生活细节，目前看来稍微有点操作不便，未完待续； 想法出处工作期间有一次出差杭绍台，因为要汇报每日工作，写总结有的时候会漏掉一些事情的细节，可能按照大致阶段去写，领导也许会质疑为什么一天只做了这几件事情。但是从我角度出发，每件事可能需要很多的细节来填充。如果我不表达，领导肯定是不知道的，误会就这样产生。期间也有听过市场部的同事有所抱怨要回忆之类的； 后来渐渐有了总结日志的习惯，最初承载平台为有道云笔记，但总归太原始了，在想有没有类似日志框架的app来记录我的日行程动作； 发现大部分都是书写日记类型app又或者设立与完成目标类型app； 借鉴他人项目期间发现一款名《Progress进度管理》的app。功能挺简洁的，超级轻量，售价记得是3元，给我了很大的启发。他的主要功能点大致分为三个部分： 新建任务，用于设置一个目标； 打卡任务，设立好的任务被添加到首页，点击card天数+1； 任务归档，打卡完毕任务归档，用户历史检索； 同质化app极多，为什么他的app可以脱颖而出？ 价格便宜，此为决定项； 功能很简洁，界面美观，此为优势； 操作便捷，学习成本低，此为优势； 在初始状态时有设立默认card，可以让用户第一时间知道如何操作，此为加分项； 功能切入要点及其准确，知道用户需要什么，任何产品上都适用，此为核心； 《Progress进度管理》截图 1.0.1功能设计根据《progress进度管理》修改： 修改 打卡任务页，更名为首页，将card含义改为标签； 新建任务页，更名为新建标签页，改为新建标签； 任务归档页，更名为足迹，保持归档含义，改为自动每日一归档； 添加 首页添加脚印，页面分为上下两部分，上半部为标签与新建标签，下半部为脚印； 添加脚印详情页，内容为细节（开始时间，结束时间，描述信息 可为空，等等）； 添加足迹详情页，内容为脚印； 添加统计模块； 功能解释用户创建的标签代表一个动作，例如新建三个标签：&lt;娱乐&gt;、&lt;工作&gt;、&lt;生活&gt;、&lt;学习&gt;； 标签 计划每天6点背单词，起床时点击一下&lt;学习&gt;，此刻首页下半部分添加一条脚印，状态为进行中（标签=学习，开始时间=CURRENTTIME，结束时间=nil，描述=mil）； 8点开始早餐，再次点击学习，状态更新为已结束（结束时间=UPDATETIME）； 10点开始写ios，点击工作，此刻首页下半部分添加一条脚印（标签=工作，开始时间=CURRENTTIME，结束时间=nil，描述=mil）； 以此类推…； 脚印 夜间，躺在床上浏览一遍今日脚印，只能看到各类型标签开始与结束时间； 如果愿意，此时可以修改脚印详情，比如补充详情描述，这个标签时间段做了哪些事情，再比如微调下时间的误差等； 甚至为今日足迹添加一段总结日志； 足迹 每日归档的脚印列表称为足迹； 统计 目前只有想到时间维度的标签占比饼状图 模型lifeLabel1234{ &quot;name&quot;:&quot;标签名称&quot;, &quot;id&quot;:&quot;随机ID&quot;} footmark123456{ &quot;lifeLabelId&quot;:&quot;标签id&quot;, &quot;startTime&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;, &quot;endTime&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;, &quot;content&quot;:&quot;描述&quot;} track123456789101112{ &quot;title&quot;:&quot;标题&quot;, &quot;content&quot;:&quot;描述&quot;, &quot;footmarkArray&quot;:[ { &quot;lifeLabelId&quot;:&quot;标签id&quot;, &quot;startTime&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;, &quot;endTime&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;, &quot;content&quot;:&quot;描述&quot; } ]} 总结其实吧，分析下来感觉并不会有人用，也不会有人尝试： 原因是操作相对的麻烦，需要打开应用，开始，相应的解决方式，可以通过桌面组件或者配合applewatch使用； 至于功能嘛，真的有人需要精确到时分秒吗，适用场景并不是很多，就算有，可能在真正做起事情来之后也就忘记app的事情； 当初我需要这样的功能是出于两种情况： 其一，监督自己的学习时间； 其二，想用于工作汇报； 但自从开始写博客之后对这方面的需求就为0了； 怎么说，自己第一个独立项目不期望做的多么完美，甚至有一些其他的想法，比如亲子绑定之类的。但先不想那么多了，做一个完成度60的及格项目，只要是有自己的想法即可，毕竟我对自己的要求是越做越好，调起得太高我怕到后面缺氧； 工期安排 7号规划文档； 8号界面设计； 9号tabbar页面； 10号首页； 11号足迹页面； 13号至15号发布appstore； 工作进程2021-06-08 完成首页基本框架设计 今日截图 相关技能点；123曲率 .cornerRadius(3.0)；超出view部分裁剪 .clipped()；TabView的.tabItem view为Image与Text，不能使用customfont引入的iconfont，同时遇到图片无法调整大小的问题； 意外情况 本来想要使用timer控制进行中label表盘转动，如果过多会导致生活标签section出现拖影分离，越多timer越明显，虽然观看cpu占用，内存占用并无大区别，但依然放弃使用了，毕竟我还是个门外汉； 明日计划 将首页界面细节稍微调整一下，并不涉及动画效果； 完成FootmarkDetailHomeView； 完成trackView； 完成trackDetailView； 2021-06-09 调整首页布局； 添加脚印详情页； 添加添加标签页； 今日截图 13日计划 完成trackView； 完成trackDetailView； 目标 售出50份 评价4✨ 不出现bug/解决掉所有用户提出bug 未完待续……","link":"/2021/06/03/project/ios/project-planning-lifetrip/"},{"title":"来自新世界的第一期","text":"第一天，我叫李子晗，初次见面请多指教； 感谢各位像素元同事们这1年的照顾与指导，万分感谢项目经理吴周检给我这次工作机会，让我接触到了很多高学历人才，受到很多人的点拨： 晶姐教导我如何消除与他人沟通的误差； 受思捷影响使我变得愈发冷静； 华哥让我认识到身体健康的重要； 高明哥给我了一个奇妙的思维方式； fox带我走进了多语言的大门； 大灰涛让深刻体会到思维导图的重要性； 与吴哥的相处中学到了一些项目管理的思路与技巧； 今天是在公司的最后一天，明天就要开始新生活了，提出离职这两个星期与我模拟离职的心态一致，忐忑、不安、迷惘，好在有过预演，两天时间也算是接受了现实。与当初来杭州找工作不同，如今面临了更大的挑战，当初曾开玩笑说找不到工作便沉西湖底，如今便是要应验了，但还是希望自己可以体面一点。回归正轨后主要在做： 搭建个人博客； 未来租房在哪里； 规划下未来半年的计划，想做的有很多，但要安排好先后顺序； 未来兼职方向，倾向于服务行业或志愿者，主要是不想让自己脱离社会实践与人际交往； 打通了一下微信支付，刷一下流水，尝试开通企业付款到零钱（不知道这种做法是否可行），为社区提现功能提前铺垫； 最后一日，我叫李子晗，还望大家日后不要吝啬指教；","link":"/2021/05/31/life/log/diary/hello-world/"},{"title":"来自新世界的第十期","text":"今日总结目标周五、周六例行休息，放飞自我； 动作 帮助一个老哥抢票捡漏成功，收入150，分给烨董30元情报费用，有钱大家一起赚哈。这是第一次在互联网上赚到钱，有点意思，后续再想想如何将自己的技术变现； 看了helloworld电影，总体感受一般吧。冲着名字去的，感觉有点打破次元壁 helloworld讲的故事和他的名字一样，是每个程序员绕不开的话题勤勤恳恳遵从他人的安排，终将成为用完就扔的工具人[Doge]toolsman:按照你说的做完会怎么样？boss:按照我说的做完就知道了。toolsman:我好了boss:sudo mv&amp;rm 总体来说躺尸一天，傍晚时和龙导吹吹水，决定包养我去青海玩一下。当然，要做好一个提包小弟该有的本分[认真脸]","link":"/2021/06/11/life/log/diary/hello-world10/"},{"title":"来自新世界的第十二期","text":"今日总结目标端午节法定假日，再加上昨天和菊花沟通到3点，继续放飞自我； 动作今天基本上就是躺尸休息，研究一下租房位置，价格都不是特别理想，还想住的舒适一些，研究下显示器什么的。","link":"/2021/06/13/life/log/diary/hello-world12/"},{"title":"来自新世界的第十一期","text":"摘要两次都没赶上，上周五法喜寺出来，吃完饭4点了。 看了一眼地图，18点30打烊，过去时间比较赶，决定下次再来。 今天路过17点到了，看了一眼地图周一至周五18点30下班，周六日17点下班，我淦。 小区外围遇到一只小麻雀， 今日总结目标周五、周六例行休息，放飞自我； 动作 两次都没赶上，上周五法喜寺出来，吃完饭4点了。 看了一眼地图，18点30打烊，过去时间比较赶，决定下次再来。 今天路过17点到了，看了一眼地图周一至周五18点30下班，周六日17点下班，我淦。 小区外围遇到一只小麻雀，超小只，估计是被风吹下来的，看了一圈附近书上没有巢，祝好运。 再次错过森海塞尔试听 感受了一下密室逃脱，体验真心不错。特别喜欢npc的声线就那种很通透的感觉，声调很高，但是听起来不疲惫。 期间有一些小问题，一共8角色，因为是拼团对方6人参加，最骚的是迟到了很久…我所饰演的角色单人任务 并没有玩上，听说很刺激。独自一人前往寝室查看档案，期间5分钟只要出门就会被npc贴脸杀，抓住脖子按在墙上 。啊，缺少一次与npc正面接触的机会，就很可惜！ 密室逃脱 结束后去了阿三烧烤，不太好吃（对比价格得出的结果）服务态度还不错。思索之后还是决定要住到一起； 阿三烧烤 回来以后我和菊花说大概在18号搬走，他状态也不太行，找工作不顺利，心态很炸裂。我问他这一个月有没有什么提升？ 他说只是有点收获，但没有什么用。我挺受挫的，我分享了很多我近年的经历，给出了很多建议。 比如开始写日志，开始总结，开始稍微有一点对游戏的自控，当出来的时候也有一个目标，蛮有奔头的，直到最后本盘。 菊花问我道：你对我这段时间怎么评价？ 我表示：三个阶段，其一有一个明确的目标，要冲进剪辑圈，那段时间时间控制得还算得体；其二在第一个工作丢失后 开始放纵，白天甚至也是在玩游戏。其三就是崩坏后的混沌。 你嘴上一直说着总结了，人家要一个有经验的。我说，你可以把经历和你其他的朋友说一下，听听人家的见解。 你所回忆的永远是大脑美化后的数据，你所总结的永远是你在意的那个点。 后来拿调酒师学徒的工作举例，调酒师对他说： 你常来酒吧吗，你了解酒吗，你了解环境吗？ 表现得很卑微，说只需要个环境，会很努力。调酒师表示get不到那个点； 我：你了解酒吗？ 菊花：不了解。 我：你了解了酒吗？ 菊花：什么？ 我：你了解酒吗？这是一个问题。你了解了酒吗？这是第二个问题。 菊花：没有。 我表示：你既然要去面试，怎么可以不对其充分了解就去应征？就比如我要买显示器，我肯定要了解那些参数的含义分辨率、色深、HDR、hdmi2.1、FPS、色域。然后根绝我的业务场景，去设定一个参数阈值，再去淘宝检索一个大概的价格范围。然后尝试缩小范围，得到一个最佳性价比的值。在我的世界观里，面试可以说我不会，但是不能说我不了解，如果说了不了解，那自己一定有问题。 我表示：一个人想将自己的想法让别人设身处地的理解，是一件很难的事情，只有通过侧面表达来丰富人物层次。你只是再说你会努力，是我我也get不到那个点。你来面试，本身就不懂，还不做功课了解一下。如果你当时面试表达，我认为调酒是一件很有成就感的事情，我曾经见过一个调酒师，将一个几乎同杯容积的冰块置入容器，放一些酒，然后搅动冰块直致融化，耗时长达1小时，顾客喝完后很满意。我很期待有人能对我表露这样的神情。又或者可以说，我很喜欢和形形色色的人接触，喜欢听他们口中的都市怪诞，喜欢与他们沟通。那是不是就已经和调酒师产生了共鸣，他怎么可能再说出我get不到你这个点，这种话。 最后菊花问我：你对于我要退缩这件事情怎么看待？ 我表示：早已经预到，还记得你刚来的时候我和你开玩笑吗？你一定不能跑路哈！ 我不知道他这句话有没有潜台词，要我安慰他也好，要不拼命留住他也好。我不是个会安慰的人，我的成长经历 从来也没有人安慰过我，不是我不想，是我不知道该如何帮助倒地不起的人。 因为他是一个问句，他一定是想得到某一个答案，我不会过多修饰，我只把我所想的表达出来。在我看来朋友遇到难处 只有帮助他解决问题才是最好的安慰，说再多都没用。但我没办法给他一个工作，我能给的这一月全都已经做的， 就是我的这些经历希望给他作为一个参考，然并卵。 菊花说到：钱花了，既没找到工作，也玩的不快乐； 既然我不能给你一个工作，我表示：你这一个月的开销是多少，我给你补上，然后你退回到起点。也不算完全没有提升， 好在有你自己总结的那几点收获，对你未来的人生也有帮助，你只是消耗了1个月玩游戏的时光，也不亏。 菊花沮丧道：你知道这样说我会很伤心吗？ 我表示直到，我知道，但这是我唯一能帮到你的地方。 当天凌晨3点才睡","link":"/2021/06/12/life/log/diary/hello-world11/"},{"title":"来自新世界的第二期","text":"今日完成情况 继续做app原型，其实大致框架早在3月份基本完事了，剩下的都是微调，当然还要充实下功能，这个需要个长期的思考，估计20个工期可以完成初版原型app； 下午时思考将废置笔记本利用起来，想搭建一个ftp服务器，然后让工作机加载网络驱动实现录制视频直接存储与ftp不占用工作机空间，不知道是否可行； ftp还没开始搭建，无意间发现了上学时与同学们做的网站，以现在的要求来看可以说是十分”简陋”了，但是承载了很多回忆，正好趁着6.1发布出来让大家回一下哈；","link":"/2021/06/01/life/log/diary/hello-world2/"},{"title":"来自新世界的第三期","text":"摘要今日主要围绕虚拟机docker环境抉择，与日后计划； 今日完成情况尝试win环境搭建docker，想将alienware改造为服务器 家庭版成功安装hyper-v，并且伪装为专业版安装docker desktop但是docker服务存在一个异常问题； docker version 及其他指令报错提示1error during connect: This error may indicate that the docker daemon is not running.: Get &quot;http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.24/version&quot;: open //./pipe/docker_engine: The system cannot find the file specified. 根据面相互联网开发思想，给出的多数答案改为Windows Containers，但是对我无效； 互联网多数解决方案12cd &quot;C:\\Program Files\\Docker\\Docker&quot;DockerCli.exe -SwitchDaemon 在尝试无果后，感觉win10环境也着实不适合搭建服务，开始思索做个ubuntu20.04server版本双系统。在使用u起安装系统时最后一步出现一个error，不想追究，失败告终； 思考下还是决定依赖hyper-v开启一个虚拟机，win10平台相对熟悉，了解如何压制cpu频率，后续相对省电； 兼职 遇到了一个很有意思的兼职工作，游戏体验馆，这我不无敌了吗？10年游戏经验，贾德诺； 截图 计划每周5面试一次，出于两点考虑； 现阶段遇到瓶颈，看看是否有机会受到高人指点； 万一遇到很合适的公司呢；","link":"/2021/06/02/life/log/diary/hello-world3/"},{"title":"来自新世界的第四期","text":"摘要同学来杭州工作了，接待一下； 今日完成情况同学来杭州了 聊的过程中决定明天出去玩一天散散心，想去森海塞尔线下实体店体验下HD600； 在帮忙找住处，吹水的一天，吐槽下当年上学的时候挺有意思的，期待更多的朋友来杭； 在规划一个工具类型app优于社区先开发，这方面先拿AppStore试试水如果效果可以尝试开发华为版本，详情稍后发布； 思考了一下把周五的面试推了，本来计划辞职是要沉淀一段时间，现在去面试有悖于当初的决定，就算是为了去咨询问题也要先积累一定问题吧； 安装win10系统 毁灭吧赶紧的，使用UltraISO工具制作win10镜像中途总是报错，自带的恢复系统中途失败，受不了了，就很离谱。最后再尝试下微软官网下载的升级工具，再不行的话，毁灭吧赶紧的；","link":"/2021/06/03/life/log/diary/hello-world4/"},{"title":"来自新世界的第五期","text":"摘要喝完酒第二天：头好疼，以后再也不喝酒了。到了酒桌上：给爷满上，不喝断片不许走！ 2021-06-04准备出发9点30出门前往法喜寺，路线为长河6号线坐到枫华西路，然后公交到达上天竺。中途在枫华西路等了30分钟才发车，期间在思考要不要住到这边来，感觉房租价格，地段都还可以。随后找了一个中介吹水一会，我表达出是想了解下附近租房情况，简单聊聊。但这个老哥属实有点”热情”，说要电话详聊（我挺反感这种情况的，一般非工作、快送员，又或是重要事情以外的电话我都会很乏感，能打字就别语音）发车后没有再回复； 到达也就是在法喜寺转了一圈，网红景点散散心。前段时间不是挺郁闷的嘛，但好在自己的抗压能力一直不错，心态调整极其迅速，还没来得及放松自己就已经恢复了。期间有抓拍到一张不错的照片还是比较满意的； 超喜欢的机位 返程下午吃完饭已经16点了，本来还打算去森海塞尔线下体验一下hd600（最近在考虑买音响还是耳机）但实体店18点就打烊了，我过去需要1小时，不喜欢将时间排的太赶。我宁可日后再去，回去了回去了； 到家以后还是这个中介，就很有意思，又来微信我。先问我是否要过去看房，但我之前就已经说清楚只是了解下。最最最有意思的是居然叫我过去工作面试…我人都傻了，就感觉很有意思，其实我现在比较需要一份每天只做4小时的工作，工资不需要很多够吃喝就行。但很显然不能进”传销”，每天早起那些房地产的员工跳舞，喊着努力加油什么的，比996是福报听起来还要恐怖； 聊天记录 意外情况华哥（像素元的同事）叫我小聚一下，和应用组的那些朋友。原本是说周一我离职那天聚的（也就是5月31日）可是大家都很忙没有时间，然后又说改日再聚，我以为最后就不了了之了。今天是很累了已经，但希望可以保持住与大家的联系。同事都是年轻人，没有那么多的利益交往，人际环境相对纯粹，非常珍惜； 我本身很讨厌酒类，感觉不好喝（哪里有肥宅水快乐，话说已经戒了）可能也是因为没有喝过那种”好酒”。我只是喜欢喝醉，身心酥麻的感觉，以至于平时会喝一些强效酒精饮料，比如四洛克，致醉效果非常nice。酒一上头嘴就碎起来了，讲了很多心里话，吐槽了很多工作的事情，说一说我为什么离职，为什么如此急于求进…反正就没停下来，因为平时交流就比较少，停下来我怕会冷场，我怕就这样结束了，我想尽可能的表达下自己的情感； 回去的时候，我知道是超哥掺我上的车，下车时我是爬下去的，菊花接的我，至于小单车🚴‍️是思捷帮我骑回来的； 仅存的一张现场照 2021-06-05头疼疼醒的，一点精神没有，想睡睡不着，看会视频直接暴毙，最后只能眯眼装死。中午也不知道吃什么，就点了份皮蛋瘦肉粥，点完就后悔了，太腻了，应该搞碗小米粥。随后睡了一会儿，被菊花吵醒，这个13应该是在写公众号文章，伴随着敲击机械键盘的声音，心中一万只草泥马奔腾而过。状态稍微好了一点点，但不想说话，菊花的问话也是爱答不理，稍微修了下昨天的图便24点了，今天就这样完结。 有个好消息，菊花的工作面试有起色了； 2021-06-06win本重做了系统，破解升级成专业版，这次docker的安装十分顺利。搭建了一个ftp服务器，但我设想的那种使用方式不太行，在mac录制视频，将存储地址设置为ftp地址，就…算了算了，不搞这些花里胡哨的，再买个4t硬盘好了。","link":"/2021/06/06/life/log/diary/hello-world5/"},{"title":"来自新世界的第六期","text":"今日总结昨晚睡的有点晚，8点11分才起来，规划了一下《项目规划生命之旅其一》;但最后的总结吧，在仔细梳理之后我认为并有设想的如此完美的高可用性，虽然我更想抓住核心向的用户群，但显然这个选择并不是很正确，但是还是要先做一下;","link":"/2021/06/07/life/log/diary/hello-world6/"},{"title":"来自新世界的第七期","text":"今日总结目标 8点之前起床。失败：8点10分起床； 晚间拒绝垃圾食品。成功：通过与菊花沟通分散了注意力； lifetrip进度。成功：顺利完成今日目标； 手机时常控制。成功：1小时； 动作 lifetrap进入进度 《项目规划生命之旅其一》； 通过与菊花的沟通决定开设一个总结分类，专门记录日常总结分析 《自我救赎》； 站点地图 域名验证 获取站点地图 验证站点地图 参考博客","link":"/2021/06/08/life/log/diary/hello-world7/"},{"title":"来自新世界的第八期","text":"今日总结目标 8点之前起床。成功； 晚间拒绝垃圾食品。成功； lifetrip进度。失败：低估工作量，需要重新调整； 手机时常控制。成功； 动作 开始舍弃有道云笔记载体，渐渐将文档搬运到blog； 《项目规划生命之旅其一》； 《SwiftUI随笔杂记》； SwiftUI通过监听小键盘高度添加背景，通过点击背景隐藏小键盘；","link":"/2021/06/09/life/log/diary/hello-world8/"},{"title":"来自新世界的第九期","text":"今日总结目标 8点之前起床。成功； 晚间拒绝垃圾食品。成功； lifetrip进度。失败：低估工作量，需要重新调整； 手机时常控制。成功； 动作 早上9：30之前群内吹水了解了一下apple支付规则 我自己的看法是：只有用户和用户交易的同时你不参与抽成，苹果才会不抽成 群内管理员建议是：你可以这样理解：App仅仅是展示或使用某个帐号权限范围内的功能。App内不能出现任何引导用户到其它渠道充值或购买的内容虚拟货币、充值购买行为、供选择的虚拟商品或服务，这三样东西任意一个出现在你的App里，苹果公司就有理由让你支付苹果税。 勇者表示：参考微信的表情包打赏 腾讯云到期了，因为还不确定早季服务器需要的资源，买了个临时用的轻量级服务器，对付日常应用。但是由于与云服务镜像不互通，软件被迫需要重新安装…行吧，正好把文档补全一下；docker安装nginx安装jenkins安装 把大麦自动下单完善了一下，有一场王琳凯的演唱会，看看有没有机会接个单什么的； 我原本想法是将脚本打包，做制定场次、mac地址限制，搭配临时体验时间，过期需要输入密钥策略，这样我先把脚本给对方，也不怕被放鸽子。我是真没想到大家都不愿意自己刷…我以为参与其中会更有带入感，更在意的是付款买票，抱歉抱歉…","link":"/2021/06/09/life/log/diary/hello-world9/"},{"title":"每周回顾的第一幕","text":"摘要优先做出一个工具app，大战之前，先给自己加成一丢斗志； 本周总结 第一个阶段，因为辞职心情十分低落： 心痛、不安的情绪围绕着我，看不到一点光明，为未来的自己担心，觉得后半生就这样完蛋了。但也就仅此两天，我心态调整的还是很快的，除了恋爱没有我走不出的阴影； 第二个阶段就是寻找目标方向了： 月底房租到期之前租在哪里，是否能有朋友与我合租，租房位置与还不存在的兼职工作位置距离取舍： 目前最优选是萧山姑娘桥，优点是离董烨比较近，可以教我如何健身。最重要的是价格及其便宜。到达滨江长河只需要40分钟地铁。缺点是周边生活设施比较缺失，没有室友合租，只能找陌生人； 其次是下沙，优点是好兄弟胜楠在那里，一起住会很开心； 工作方向，是先做工具app尝试在AppStore销售一下，还是做梦想的社区app： 社区app是辞职的目标以及梦想，体量相对庞大，有很多东西要设计； 工具app功能很简单，唯一的要求是界面要美观！这个很重要，我的设计能力相当差劲，最后抉择之下选择先写工具app； 工作室的打造打造清单： aoc273显示器，价格2500； ipad 2020，价格2500； 工作椅，预算1200； 桌子预算300； 其他配件预算1000； 下周目标 完成工具app； 确定好清单； 多看一看ui设计，目标是当做产品时脑中有界面的画面；","link":"/2021/06/06/life/log/weekdiary/weekly-review1/"},{"title":"每周回顾的第二幕","text":"本周总结 本周开始了第一个工具类ios app 《life trip》规划已经做完，目标设立好，并且已经开发30%。 但隐隐种种原因比较拖延，比如菊花工作，脚本，我要换房子，陪胜楠出去玩之类的。还完房子后工作会趋于稳定； 搞出一个抢票脚本，有待提高空间，收入150 看了电影helloworld 脱离舒适圈，第一次参加社交活动：密室逃脱 菊花612崩溃事件 在规划新住处 下周目标 搬家 尽可能完成app","link":"/2021/06/14/life/log/weekdiary/weekly-review2/"},{"title":"《自我救赎》","text":"摘要我是个日常比较喜欢总结的人，晚间躺在床上眼神迷离，神情放空，这时我大概率是在回忆今日过往，又或者通过某些细节联想到过去的一些做法，陷入深思。与他人沟通，从中汲取知识。与自己对话、将知识化为自身的优势；但存在今日发觉存在一些问题，我会遗漏，特此开帖书写自我救赎的新篇章，长期不断更新； 2021-06-14面试之前要做好充足准备不再轻易的自以为是给出建议，可能会适得其反与人沟通尽可能产生共鸣感 出处：[菊花面试之调酒师学徒](http://life.sakikun.com/2021/06/12/life/log/diary/hello-world11/) 无论你在什么境地，千万不要丢了勇气—- 出处：刘博坤的建议 比如你对现阶段不满意，感觉往后不知道怎么发展，请鼓起勇气去面对问题本身，不断寻找方法去做你想做的 2021-06-08与人沟通这也是我为什么想要在辞职后继续保持工作。想要找一个咖啡师或者剧本杀npc的兼职，前者可以学习一们技术，后者可以学到控场能力，但有一个共同点，就是可以与形形色色的人接触，这是我目前的短板。如果我闷在房屋不出门，我所接触到的永远是自己的集合，与绣花的并集，堪比井底之蛙； 沟通反馈以前工作中被提及过此事，我理解的比较快，但当时没想那么多。现在与菊花沟通中更加觉得就算了解，也需要给予一个正反馈，就像晶姐说的那样，把我所理解的复述一遍； 转化率菊花最近剪辑视频方向为，个人游戏录像的剪辑。我认为这个学习路线对工作的转化率低效。个人主观分析下来，提升最大的两个方面为，音乐画的配合与转场。我拿《逗鱼时刻》这类型媒体举例，比如字幕的技术性，2k、4k分辨率应该使用什么比例（大小）的字号，又或者说单个字屏比应该是多少，16:9屏幕观看21:9视频字幕位置与字号之间的关系等等。毕竟视频剪辑者是面对用户……我又举例可以多看看广告片，毕竟广告是一个微电影，优秀的广告有很多，比如苹果全家桶，身边的就是万家乐热水器； 总结每次与人沟通或者与自己对话又或者回顾历史，都能总结出新的知识点，愈发的在意；","link":"/2021/06/08/life/summary/perception/selfdelivery/"},{"title":"docker安装mysql","text":"1.拉取镜像docker pull mysql:8.0 2.创建数据目录和配置文件mkdir /Users/lizihan/Desktop/docker-v/mysql8/data mkdir /Users/lizihan/Desktop/docker-v/mysql8/cnf 3.创建配置文件vim /Users/lizihan/Desktop/docker-v/mysql8/data/my.cnf 配置详情1234567891011121314151617[client]default-character-set = utf8mb4[mysqld]datadir = /usr/mysql/datacharacter_set_server = utf8mb4collation_server = utf8mb4_binsecure-file-priv= NULLsymbolic-links=0!includedir /etc/mysql/conf.d/ 4.启动容器命令详情123456docker run -d -p 3306:3306 \\ -v /Users/lizihan/Desktop/docker-v/mysql8/data/my.cnf:/etc/mysql/my.cnf \\-v /Users/lizihan/Desktop/docker-v/mysql8/data:/var/lib/mysql \\--restart=unless-stopped \\-e MYSQL_ROOT_PASSWORD=123456 \\--name mysql mysql:8.0 5.mysql初始化初始化详情12345docker exec -it mysql bashmysql -uroot -puse mysqlALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '新密码';flush privileges;","link":"/2021/06/10/learn/systemserver/linux/mysql/installmysql8/"},{"title":"docker安装nginx","text":"1.拉取镜像命令1docker pull nginx:latest 2.运行shell命令1docker run --name serviceNginx -p 80:80 -d nginx p映射端口d后台运行v挂在目录，可以根据需求自行设置 ps：根据自定义配置1.创建配置文件命令11. vim /home/ubuntu/docker-v/serviceNginx/nginx.conf 2.配置详情配置12345678910111213141516171819202122232425262728293031user nginx;worker_processes auto;error_log /var/log/nginx/error.log notice;pid /var/run/nginx.pid;events { worker_connections 1024;}http { include /etc/nginx/mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] &quot;$request&quot; ' '$status $body_bytes_sent &quot;$http_referer&quot; ' '&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;'; access_log /var/log/nginx/access.log main; sendfile on; #tcp_nopush on; keepalive_timeout 65; #gzip on; include /etc/nginx/conf.d/*.conf;} 3.构建shell命令命令12345docker run -d \\-p 80:80 \\-v /home/ubuntu/docker-v/serviceNginx/nginx.conf:/etc/nginx/nginx.conf \\-v /home/ubuntu/docker-v/serviceNginx/domain/:/etc/nginx/domain \\--name serviceNginx nginx","link":"/2021/06/10/learn/systemserver/linux/nginx/installnginx/"},{"title":"docker安装jenkins","text":"1.拉取镜像命令1docker pull jenkins/jenkins:latest 2.构建shell命令12345docker run -d -u root -p 你的端口:8080 \\-v /home/ubuntu/docker-v/toolJenkins/jenkinsHome:/var/jenkins_home \\--restart=always \\--name toolJenkins \\jenkins/jenkins:latest 3.配置镜像3.1修改hudson.model.UpdateCenter.xml配置文件命令123456sudo vim /home/ubuntu/docker-v/toolJenkins/jenkinsHome/hudson.model.UpdateCenter.xml默认路径http://updates.jenkins-ci.org/update-center.json改成路径http://mirror.xmission.com/jenkins/updates/update-center.json 3.2修改default.json配置文件命令123456sudo vim /home/ubuntu/docker-v/toolJenkins/jenkinsHome/updates/default.json默认路径&quot;connectionCheckUrl&quot;:&quot;http://www.google.com/&quot; 改为路径&quot;connectionCheckUrl&quot;:&quot;http://www.baidu.com/&quot;","link":"/2021/06/10/learn/systemserver/linux/jenkins/installjenkins/"},{"title":"《SwiftUI杂记》","text":"摘要SwiftUI随笔杂记，长期更新； 1.swift icon库1SF Symbols 2.禁用1.disabled(boolean) 3.延迟123DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) { isItemDisabled = false} 4.滑动12345678910// translationX 绑定值// state滑动中变化 赋值给 translationX// locationX = 最后松手位置.gesture( DragGesture().updating($translationX) { value, state, _ in state = value.translation.width }.onEnded { value in locationX += value.translation.width }) 5.过度 延迟添加 移除12345678.transition( .asymmetric( insertion: AnyTransition.opacity .animation(Animation.spring().delay(0.3)), removal: AnyTransition.opacity .animation(.spring()) )) 6.tabview样式1PageTabViewStyle ~~7.隐藏二层导航栏~~12.navigationBarTitle(&quot;&quot;).navigationBarHidden(true) 8.图片用法12345Image(&quot;test&quot;).resizable() // .frame(width: 100,height: 100, alignment: .center).clipShape(Circle()) // 裁剪 9.分组分割线123456Group { DiscoverRow(icon: &quot;discover_qrcode&quot;, title: &quot;扫一扫&quot;) Separator().padding(.leading, 52) // 分离线 DiscoverRow(icon: &quot;discover_shake&quot;, title: &quot;摇一摇&quot;) Divider()} 10.git文档12345678910111213141516171819202122232425262728https://github.com/AndreaMiotto/PartialSheet #sheet讲解https://github.com/SDWebImage/SDWebImageSwiftUI #网络图片加载https://github.com/dmytro-anokhin/url-image #图片下载https://github.com/carson-katri/swift-request #http请求https://github.com/Dimillian/RedditOS #Reddit mac客户端源码https://github.com/kylehickinson/SwiftUI-WebView #加载网页 《看起来很屌》https://github.com/yannickl/DynamicColor #颜色扩展 《看起来很屌》https://github.com/danielsaidi/SwiftUIKit #工具包 《应该可用》https://github.com/badrinathvm/StepperView #流程 《应该可用》https://github.com/elpassion/FlipClock-SwiftUI #倒计时翻牌 https://github.com/exyte/Grid #css like 栅栏布局《看起来很屌》https://github.com/MillmanY/SwiftDrawer #侧边抽屉《看起来很屌》两天前的组件不一定可用https://github.com/nachonavarro/Pages #模仿书翻页https://github.com/fermoya/SwiftUIPager/blob/develop/Documentation/Usage.md #分页 《非常屌》https://github.com/kishanraja/FloatingLabelTextFieldSwiftUI #文本框校验 具体没有仔细看https://github.com/gonzalezreal/MarkdownUI #解析markdownhttps://github.com/Silence-GitHub/BBSwiftUIKit #uikit下拉上滑刷新https://github.com/wxxsw/Refresh#installation #纯swift下拉上滑刷新https://github.com/Rillieux/PhotoSelectAndCrop # 照片选取裁剪https://github.com/Jake-Short/swiftui-image-viewer # 图片预览https://github.com/bbaars/SwiftUI-Image-Carousel # 图片轮播https://github.com/Changemin/RadioGroup # 单选按钮组https://github.com/Mindinventory/SwiftUI-Sample-App # 登陆模版https://github.com/exyte/FloatingButton # 浮动按钮https://github.com/Changemin/LoadingButton # 加载按钮https://github.com/KeyboardKit/KeyboardKit # 小键盘套件https://github.com/badrinathvm/StepperView # 时间轴 很强 11.如何在SwiftUI中添加自定义.svg符号？12345678let img = UIImage(named: &quot;yourImageName&quot;)extension UIImage { static func catHeadImage(filled: Bool = false, scale: SymbolScale) -&gt; UIImage { let config = UIImage.SymbolConfiguration(scale: scale) return (UIImage(named: filled ? &quot;cat.head.fill&quot; : &quot;cat.head&quot;)!.withConfiguration(config).withRenderingMode(.alwaysTemplate)) }} 12.关于swift：如何将一个SwiftUI View作为变量传递给另一个View结构1https://stackoverflow.com/questions/33290564/callback-function-syntax-in-swift 13.ui颜色1https://zhuanlan.zhihu.com/p/99065208 14.点击事件优先级123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167https://yulezixue.com/2020/05/11/swiftui-gesture/1. 基础手势1.1 轻触手势 onTapGesture// 1.单击(默认)Text(&quot;单击&quot;) .onTapGesture(){ print(&quot;你刚刚单击了&quot;)}// 2.双击Text(&quot;双击&quot;) .onTapGesture(count: 2){ print(&quot;你刚刚双击了&quot;)}1.2 长按手势 onLongPressGesture// 1. 长按手势（默认0.5 秒触发）Text(&quot;长按手势（默认）&quot;) .onLongPressGesture { print(&quot;你长按了&quot;) }// 2. 长按手势（自定义）Text(&quot;长按手势（自定义）&quot;) .onLongPressGesture( minimumDuration: 4, pressing: {isPressing in //正在按 true,中途松开或结束--false print(isPressing) }){ print(&quot;至少长按 4 秒才能看到这句话.&quot;) } 1.3 捏合手势 MagnificationGesture// 捏合手势:缩放效果Text(&quot;捏合手势&quot;) .gesture( MagnificationGesture() .onChanged{ amount in self.currentAmount = amount } .onEnded{ amount in self.currentAmount = 1 } )1.4 旋转手势 RotationGesture// 旋转手势Text(&quot;旋转手势&quot;) .gesture( RotationGesture() .onChanged{ angle in self.currentAngle = angle } .onEnded{angle in self.currentAngle = .degrees(0) } )2. 组合手势 （长按 + 拖拽）// 长按加拖拽: 使用 sequenced(before:)方法合并两个手势// DragGesture 和 offset一起使用import SwiftUIstruct GesturesBasic: View { @State private var currentAmount: CGFloat = 1 @State private var currentAngle: Angle = .degrees(0) @State private var offset: CGSize = .zero @State private var longpressed = false var body: some View { let dragGesture = DragGesture() .onChanged{ value in self.offset = value.translation } .onEnded{ _ in withAnimation{ self.offset = .zero self.longpressed = false } } let longPressGesture = LongPressGesture() .onEnded{ _ in withAnimation{ self.longpressed = true } } Circle() .fill(Color.green) .frame(width:60, height: 60) .scaleEffect(longpressed ? 1.5 : 1) .offset(offset) .gesture(longPressGesture.sequenced(before: dragGesture)) }}3. 手势优先级// 1. 父视图和子视图都有手势时,默认触发子视图的手势操作.Text(&quot;子视图&quot;) .onTapGesture { print(&quot;子视图优先（默认&quot;) }// 2.更改默认的优先顺序：highPriorityGestureVStack{ Text(&quot;子视图&quot;) .onTapGesture { print(&quot;子视图优先（默认）&quot;) }}.highPriorityGesture(//更改默认的优先顺序 TapGesture() .onEnded{ _ in print(&quot;父视图优先&quot;) })// 3. 同时触发父子视图：simultaneousGestureVStack{ Text(&quot;子视图&quot;) .onTapGesture { print(&quot;子视图优先（默认）&quot;) }}.simultaneousGesture(//同时触发 TapGesture() .onEnded{ _ in print(&quot;同时触发父视图和子视图&quot;) })4. 禁用手势 allowHitTesting// 禁用手势：SwiftUI 所有的控件默认允许使用手势，即allowsHitTesting默认为 true，改成 false 即可禁用手势。Text(&quot;禁用手势&quot;) .onTapGesture { print(&quot;手势被禁用了，因此你看不到这句话在控制台输出。&quot;) } .allowsHitTesting(false)5. contentShape// 图片或图形透明部分或背景不能被点击的处理:.contentShape(Rectangle()).Circle() .fill(Color.primary) .frame(width: 300, height: 300) .contentShape(Rectangle()) //表明圆形之外的部分也当做圆形触发,与默认相反 .onTapGesture { print(&quot;圆形之外的部分也被当做圆形触发了。&quot;) }// 大段空白的处理VStack{ Text(&quot;Spacer&quot;) Spacer().frame(height: 100) Text(&quot;大块空白&quot;) } .padding() .contentShape(Rectangle()) .onTapGesture { print(&quot;VStack 被点击了&quot;)} 15.禁止小键盘覆盖输入框1234TextField(&quot;请输入&quot;, text: self.$name, onCommit: { self.endEditing()}).ignoresSafeArea(.keyboard, edges: .bottom) 16.给一个矩形某一面设置边框线1.overlay(Rectangle().frame(width: nil, height: 0.2, alignment: .top).foregroundColor(Color.gray), alignment: .top) 17.图片裁剪为规定大小 超出不展示123456Image(self.images[row * self.cols + col].url) .resizable() .aspectRatio(contentMode: .fill) .frame(minWidth: 60, maxWidth: 80, minHeight: 60, maxHeight: 80) .aspectRatio(1, contentMode: .fill) .clipped() 18.对齐偏移1.alignmentGuide(VerticalAlignment.center) { d in 10 } 19.细节补充123456789104.clipShape把View裁成某个形状 （圆形）5.clipped把超出View得部分裁剪掉1.resizable声明图片是可以缩放的2.scaleToFill保持原图宽高比填充整个空间3.scaleToFit保持原图宽高比适应整个空间 20.y轴移动距离1reader.frame(in: .global).minY 21.自定义返回12@Environment(\\.presentationMode) var mode: Binding&lt;PresentationMode&gt;self.mode.wrappedValue.dismiss() 22.捕捉屏幕边缘滑动并返回1234567891011121314151617181920212223242526272829303132struct MenuView : View { @Environment(\\.presentationMode) var mode: Binding&lt;PresentationMode&gt; # 重点 @GestureState private var dragOffset = CGSize.zero # 重点 var body : some View { VStack { Text(&quot;Settings&quot;) .foregroundColor(Color.white) .navigationBarBackButtonHidden(true) .navigationBarItems(leading: Button(action : { self.mode.wrappedValue.dismiss() }){ Image(systemName: &quot;arrow.left&quot;) .foregroundColor(Color.white) }) .frame(maxWidth: .infinity, maxHeight : .infinity) .background(Color.blue) Spacer() } .edgesIgnoringSafeArea(.top) .gesture(DragGesture().updating($dragOffset, body: { (value, state, transaction) in # 重点 捕捉屏幕边缘滑动? if(value.startLocation.x &lt; 20 &amp;&amp; value.translation.width &gt; 100) { self.mode.wrappedValue.dismiss() # 重点 } })) }} 23.navigation修饰符1234.navigationTitle(Text(&quot;&quot;)) .navigationBarTitleDisplayMode(.inline) .navigationBarHidden(true) .navigationBarBackButtonHidden(true) 24.navigationlink点击样式取消1.buttonStyle(PlainButtonStyle()) 25.动态颜色1Color(UIColor.systemBackground) // 默认白色 dark 黑色 26.引入iconfont1234567891.import iconfont.ttffiles-&gt;add file to &quot;project&quot;2.setting info.plistInfo.plist-&gt;Fonts provided by application-&gt;(item[0])iconfont.ttf3.转译 iconfont unicode&amp;#xe609; -&gt; \\u{e609}4.使用Text(&quot;\\u{e609}&quot;).font(.custom(&quot;常规体&quot;, size: 20)) 27.隐藏小键盘1UIApplication.shared.sendAction(#selector(UIResponder.resignFirstResponder), to:nil, from:nil, for:nil) 28.文本右对齐1.multilineTextAlignment(.trailing) 29.form section picker 基本用法1234567891011121314151617181920212223Form{ Section(header: Text(&quot;基本信息&quot;)){ HStack{ Text(&quot;头像&quot;) Spacer() Image(&quot;test&quot;).resizable().resizable().aspectRatio(contentMode: .fill).frame(width: 30, height: 30).clipped() } HStack{ Text(&quot;昵称&quot;) Spacer() TextField(&quot;请输入&quot;, text: $nick) .multilineTextAlignment(.trailing) } HStack{ Picker(selection: self.$countryIndex, label: Text(&quot;等级牌&quot;)) { ForEach(0 ..&lt; self.countries.count) { Text(self.countries[$0]).tag($0) } } } }} 30.填满屏幕1fullScreenCover 31.LazyVGrid section用法 section header footer12345678910111213141516171819202122232425262728VStack { ScrollView { LazyVGrid(columns: [GridItem(.fixed(100)), GridItem(.fixed(100)), GridItem(.fixed(100))], pinnedViews: [.sectionHeaders, .sectionFooters]){ ForEach(0 ..&lt; 5){ index in Section(header: Text(&quot;Header \\(index)&quot;) .bold() .font(.title) .frame(maxWidth: .infinity, alignment: .leading) .background(Color.white), footer: Text(&quot;Footer \\(index)&quot;) .bold() .font(.title) .frame(maxWidth: .infinity, alignment: .leading) .background(Color.white) ) { ForEach(0 ..&lt; 10){ idx in RoundedRectangle(cornerRadius: 5) .foregroundColor(Color(hue: 0.03 * Double(index * 10 + idx) , saturation: 1, brightness: 1)) .frame(height: 50) .overlay(Text(&quot;\\(index * 10 + idx)&quot;)) } } } } .padding() }}.clipped() 32.阴影shadow1.shadow(color: .gray, radius: 2, x: 0, y: 0) 33.timer计时器123456789101112131415161718struct ClockView:View { let timer = Timer.publish(every: 0.1, on: .main, in: .common).autoconnect() @State private var hours: Int = 11 @State private var minutes: Int = 59 @State private var seconds: Double = 0 private var calendar:Calendar = Calendar.current; var body: some View{ VStack { ClockShape(time: ClockTime(hours,minutes,seconds)) } .onReceive(timer) { time in withAnimation { seconds = seconds+1 print(&quot;时&quot;,hours,&quot;分&quot;,minutes,&quot;秒&quot;,seconds) } } }}","link":"/2021/06/09/learn/language/swift/swiftui/miscellaneous/miscellaneous/"},{"title":"ubuntu20.04 LTS安装docker","text":"1.卸载旧版docker命令1sudo apt-get remove docker docker-engine docker.io 2.更新系统软件命令1sudo apt-get update 3.安装依赖包命令12345sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ software-properties-common 4.配置阿里云密钥命令1curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add - 如出现：gpg: can’t connect to the agent: IPC connect call failed 这种问题，可以尝试：1.sudo apt remove gpg2.sudo apt install gnupg13.在执行 curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add - 5.配置阿里云docker镜像命令1sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot; 6.执行安装命令1sudo apt-get install docker-ce docker-ce-cli containerd.io PS:用户组配置 docker ps -a 出现Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1: dial unix /var/run/docker.sock: connect: permission deniedsudo groupadd docker 命令12345sudo groupadd docker #添加docker用户组sudo gpasswd -a $USER docker #将登陆用户加入到docker用户组中newgrp docker #更新用户组","link":"/2021/06/10/learn/systemserver/linux/ubuntu/docker/installdocker/"},{"title":"SwiftUI通过监听小键盘高度添加背景，通过点击背景隐藏小键盘","text":"获取小键盘高度@ObservedObject private var keyboard = KeyboardResponder()keyboard.currentHeight 通过小键盘高度判断是否需要添加灰色背景，点击灰色背景隐藏小键盘1234567891011121314if keyboard.currentHeight != 0 { Color.gray .edgesIgnoringSafeArea(.all) .opacity(0.4) .onTapGesture { withAnimation(.spring()){ UIApplication.shared.windows.forEach { (window) in if window.isKeyWindow { window.endEditing(true) } } } }} 效果图 keyboardhandle.swift123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051import UIKitimport Foundationimport SwiftUIimport Combineclass KeyboardResponder: ObservableObject { private var _center: NotificationCenter @Published var currentHeight: CGFloat = 0 init(center: NotificationCenter = .default) { _center = center _center.addObserver(self, selector: #selector(keyBoardWillShow(notification:)), name: UIResponder.keyboardWillShowNotification, object: nil) _center.addObserver(self, selector: #selector(keyBoardWillHide(notification:)), name: UIResponder.keyboardWillHideNotification, object: nil) } deinit { _center.removeObserver(self) } @objc func keyBoardWillShow(notification: Notification) { if let keyboardSize = (notification.userInfo?[UIResponder.keyboardFrameEndUserInfoKey] as? NSValue)?.cgRectValue { currentHeight = keyboardSize.height } } @objc func keyBoardWillHide(notification: Notification) { currentHeight = 0 }}class KeyboardHeightHelper: ObservableObject { @Published var keyboardHeight: CGFloat = 0 init() { self.listenForKeyboardNotifications() } private func listenForKeyboardNotifications() { NotificationCenter.default.addObserver(forName: UIResponder.keyboardDidShowNotification, object: nil, queue: .main) { (notification) in guard let userInfo = notification.userInfo, let keyboardRect = userInfo[UIResponder.keyboardFrameEndUserInfoKey] as? CGRect else { return } self.keyboardHeight = keyboardRect.height } NotificationCenter.default.addObserver(forName: UIResponder.keyboardDidHideNotification, object: nil, queue: .main) { (notification) in self.keyboardHeight = 0 } }}","link":"/2021/06/09/learn/language/swift/swiftui/technical-point/keyboardhandle/"}],"tags":[{"name":"ios项目规划","slug":"ios项目规划","link":"/tags/ios%E9%A1%B9%E7%9B%AE%E8%A7%84%E5%88%92/"},{"name":"每日总结","slug":"每日总结","link":"/tags/%E6%AF%8F%E6%97%A5%E6%80%BB%E7%BB%93/"},{"name":"每周总结","slug":"每周总结","link":"/tags/%E6%AF%8F%E5%91%A8%E6%80%BB%E7%BB%93/"},{"name":"生活总结","slug":"生活总结","link":"/tags/%E7%94%9F%E6%B4%BB%E6%80%BB%E7%BB%93/"},{"name":"mysql专栏","slug":"mysql专栏","link":"/tags/mysql%E4%B8%93%E6%A0%8F/"},{"name":"swift杂记","slug":"swift杂记","link":"/tags/swift%E6%9D%82%E8%AE%B0/"},{"name":"swift专栏","slug":"swift专栏","link":"/tags/swift%E4%B8%93%E6%A0%8F/"}],"categories":[{"name":"项目规划","slug":"项目规划","link":"/categories/%E9%A1%B9%E7%9B%AE%E8%A7%84%E5%88%92/"},{"name":"生活","slug":"生活","link":"/categories/%E7%94%9F%E6%B4%BB/"},{"name":"ios","slug":"项目规划/ios","link":"/categories/%E9%A1%B9%E7%9B%AE%E8%A7%84%E5%88%92/ios/"},{"name":"日志","slug":"生活/日志","link":"/categories/%E7%94%9F%E6%B4%BB/%E6%97%A5%E5%BF%97/"},{"name":"总结","slug":"生活/总结","link":"/categories/%E7%94%9F%E6%B4%BB/%E6%80%BB%E7%BB%93/"},{"name":"学习","slug":"学习","link":"/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"日记","slug":"生活/日志/日记","link":"/categories/%E7%94%9F%E6%B4%BB/%E6%97%A5%E5%BF%97/%E6%97%A5%E8%AE%B0/"},{"name":"周记","slug":"生活/日志/周记","link":"/categories/%E7%94%9F%E6%B4%BB/%E6%97%A5%E5%BF%97/%E5%91%A8%E8%AE%B0/"},{"name":"感悟","slug":"生活/总结/感悟","link":"/categories/%E7%94%9F%E6%B4%BB/%E6%80%BB%E7%BB%93/%E6%84%9F%E6%82%9F/"},{"name":"系统与服务","slug":"学习/系统与服务","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9C%8D%E5%8A%A1/"},{"name":"语言","slug":"学习/语言","link":"/categories/%E5%AD%A6%E4%B9%A0/%E8%AF%AD%E8%A8%80/"},{"name":"linux","slug":"学习/系统与服务/linux","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9C%8D%E5%8A%A1/linux/"},{"name":"swift","slug":"学习/语言/swift","link":"/categories/%E5%AD%A6%E4%B9%A0/%E8%AF%AD%E8%A8%80/swift/"},{"name":"nginx","slug":"学习/系统与服务/linux/nginx","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9C%8D%E5%8A%A1/linux/nginx/"},{"name":"docker","slug":"学习/系统与服务/linux/docker","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9C%8D%E5%8A%A1/linux/docker/"},{"name":"jenkins","slug":"学习/系统与服务/linux/jenkins","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9C%8D%E5%8A%A1/linux/jenkins/"},{"name":"swiftui","slug":"学习/语言/swift/swiftui","link":"/categories/%E5%AD%A6%E4%B9%A0/%E8%AF%AD%E8%A8%80/swift/swiftui/"},{"name":"ubuntu","slug":"学习/系统与服务/linux/ubuntu","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9C%8D%E5%8A%A1/linux/ubuntu/"},{"name":"mysql","slug":"学习/系统与服务/linux/docker/mysql","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9C%8D%E5%8A%A1/linux/docker/mysql/"},{"name":"杂记","slug":"学习/语言/swift/swiftui/杂记","link":"/categories/%E5%AD%A6%E4%B9%A0/%E8%AF%AD%E8%A8%80/swift/swiftui/%E6%9D%82%E8%AE%B0/"},{"name":"docker","slug":"学习/系统与服务/linux/ubuntu/docker","link":"/categories/%E5%AD%A6%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9C%8D%E5%8A%A1/linux/ubuntu/docker/"},{"name":"技术点","slug":"学习/语言/swift/swiftui/技术点","link":"/categories/%E5%AD%A6%E4%B9%A0/%E8%AF%AD%E8%A8%80/swift/swiftui/%E6%8A%80%E6%9C%AF%E7%82%B9/"}]}